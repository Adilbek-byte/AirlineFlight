// <auto-generated />
using System;
using AirlineFlight.DataBase;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AirlineFlight.Migrations
{
    [DbContext(typeof(FlightDb))]
    [Migration("20240301144752_FirstFlightMigr")]
    partial class FirstFlightMigr
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AirlineFlight.Flight", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AviaName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("DateFlightId")
                        .HasColumnType("bigint");

                    b.Property<int>("DateId")
                        .HasColumnType("int");

                    b.Property<int>("DirectionId")
                        .HasColumnType("int");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<int>("PassengerId")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TypeOfPricesId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DateFlightId");

                    b.HasIndex("DirectionId")
                        .IsUnique();

                    b.HasIndex("PassengerId");

                    b.HasIndex("TypeOfPricesId");

                    b.ToTable("Flights");
                });

            modelBuilder.Entity("AirlineFlight.FlightClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("TypeOfPricesId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TypeOfPricesId");

                    b.ToTable("FlightClass");
                });

            modelBuilder.Entity("AirlineFlight.FlightSchedule", b =>
                {
                    b.Property<long>("FlightId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("FlightId"));

                    b.Property<DateTime>("Departure")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Return")
                        .HasColumnType("datetime2");

                    b.HasKey("FlightId");

                    b.ToTable("FlightSchedules");
                });

            modelBuilder.Entity("AirlineFlight.HotFlight", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AviaName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CountOfTicket")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateTimeOfTicket")
                        .HasColumnType("datetime2");

                    b.Property<int>("PathId")
                        .HasColumnType("int");

                    b.Property<int>("TypeOfPrice")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PathId");

                    b.ToTable("HotFlights", (string)null);
                });

            modelBuilder.Entity("AirlineFlight.LocationPath", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FromWhere")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HotFlightId")
                        .HasColumnType("int");

                    b.Property<string>("ToWhere")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LocationPaths");
                });

            modelBuilder.Entity("AirlineFlight.Passenger", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Adult")
                        .HasColumnType("int");

                    b.Property<int>("Child")
                        .HasColumnType("int");

                    b.Property<int>("FlightId")
                        .HasColumnType("int");

                    b.Property<bool>("FreeTaxi")
                        .HasColumnType("bit");

                    b.Property<int>("TotalPeople")
                        .HasColumnType("int");

                    b.Property<string>("TotalSum")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Passengers", (string)null);
                });

            modelBuilder.Entity("AirlineFlightl.TypeOfPrices", b =>
                {
                    b.Property<int>("PassengerId")
                        .HasColumnType("int");

                    b.Property<int>("FlightClassId")
                        .HasColumnType("int");

                    b.HasKey("PassengerId");

                    b.ToTable("Tickets", (string)null);
                });

            modelBuilder.Entity("AirlineFlight.Flight", b =>
                {
                    b.HasOne("AirlineFlight.FlightSchedule", "Date")
                        .WithMany()
                        .HasForeignKey("DateFlightId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AirlineFlight.LocationPath", "Direction")
                        .WithOne()
                        .HasForeignKey("AirlineFlight.Flight", "DirectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AirlineFlight.Passenger", "Passengers")
                        .WithMany("Flights")
                        .HasForeignKey("PassengerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AirlineFlightl.TypeOfPrices", "TypeOfPrices")
                        .WithMany("Flights")
                        .HasForeignKey("TypeOfPricesId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Date");

                    b.Navigation("Direction");

                    b.Navigation("Passengers");

                    b.Navigation("TypeOfPrices");
                });

            modelBuilder.Entity("AirlineFlight.FlightClass", b =>
                {
                    b.HasOne("AirlineFlightl.TypeOfPrices", "TypeOfPrices")
                        .WithMany("FlightClass")
                        .HasForeignKey("TypeOfPricesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TypeOfPrices");
                });

            modelBuilder.Entity("AirlineFlight.HotFlight", b =>
                {
                    b.HasOne("AirlineFlight.LocationPath", "Direction")
                        .WithMany("HotFlights")
                        .HasForeignKey("PathId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Direction");
                });

            modelBuilder.Entity("AirlineFlightl.TypeOfPrices", b =>
                {
                    b.HasOne("AirlineFlight.Passenger", null)
                        .WithOne("Tickets")
                        .HasForeignKey("AirlineFlightl.TypeOfPrices", "PassengerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AirlineFlight.LocationPath", b =>
                {
                    b.Navigation("HotFlights");
                });

            modelBuilder.Entity("AirlineFlight.Passenger", b =>
                {
                    b.Navigation("Flights");

                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("AirlineFlightl.TypeOfPrices", b =>
                {
                    b.Navigation("FlightClass");

                    b.Navigation("Flights");
                });
#pragma warning restore 612, 618
        }
    }
}
